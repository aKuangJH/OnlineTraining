<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.train.dao.TestMapper" >
  <resultMap id="BaseResultMap" type="com.cn.train.entity.Test" >
    <id column="tid" property="tid" jdbcType="INTEGER" />
    <result column="tname" property="tname" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="testauthority" property="testauthority" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    tid, tname, uid, createtime, status, testauthority
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from train_test
    where tid = #{tid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from train_test
    where tid = #{tid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.train.entity.Test" >
    insert into train_test (tid, tname, uid, 
      createtime, status, testauthority
      )
    values (#{tid,jdbcType=INTEGER}, #{tname,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{testauthority,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.train.entity.Test" >
    insert into train_test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        tid,
      </if>
      <if test="tname != null" >
        tname,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="testauthority != null" >
        testauthority,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="tname != null" >
        #{tname,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="testauthority != null" >
        #{testauthority,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.train.entity.Test" >
    update train_test
    <set >
      <if test="tname != null" >
        tname = #{tname,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="testauthority != null" >
        testauthority = #{testauthority,jdbcType=INTEGER},
      </if>
    </set>
    where tid = #{tid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.train.entity.Test" >
    update train_test
    set tname = #{tname,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      testauthority = #{testauthority,jdbcType=INTEGER}
    where tid = #{tid,jdbcType=INTEGER}
  </update>
  <select id="getAllTestByUid" resultMap="BaseResultMap">
    select * from train_test where uid = #{arg0}
  </select>
  <select id="getTotalTest" resultMap="BaseResultMap">
    select * from train_test where status = #{arg0} and testauthority = #{arg1}
  </select>
  <select id="getAllTestByStatusAndAuthority" resultMap="BaseResultMap">
    select * from train_test
    <where>
      <if test= "param1 != null and param1 !=''">
        and status = #{param1}
      </if>
      <if test="param2 != null">
        and testauthority = #{param2}
      </if>
    </where>
  </select>
  <select id="getCountTestByStatusAndAuthority" resultType="java.lang.Integer">
    select count(*) from train_test
    <where>
      <if test= "param1 != null and param1 !=''">
        and status = #{param1}
      </if>
      <if test="param2 != null">
        and testauthority = #{param2}
      </if>
    </where>
  </select>
</mapper>